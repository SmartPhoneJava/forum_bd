// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  models

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Status ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Status ) UnmarshalJSON([]byte) error { return nil }
func ( Status ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Status ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Status *Status

func ( Vote ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Vote ) UnmarshalJSON([]byte) error { return nil }
func ( Vote ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Vote ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Vote *Vote

func ( Forum ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Forum ) UnmarshalJSON([]byte) error { return nil }
func ( Forum ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Forum ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Forum *Forum

func ( Postfull ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Postfull ) UnmarshalJSON([]byte) error { return nil }
func ( Postfull ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Postfull ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Postfull *Postfull

func ( Post ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Post ) UnmarshalJSON([]byte) error { return nil }
func ( Post ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Post ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Post *Post

func ( User ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* User ) UnmarshalJSON([]byte) error { return nil }
func ( User ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* User ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_User *User

func ( Thread ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Thread ) UnmarshalJSON([]byte) error { return nil }
func ( Thread ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Thread ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Thread *Thread

func ( Result ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Result ) UnmarshalJSON([]byte) error { return nil }
func ( Result ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Result ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Result *Result
